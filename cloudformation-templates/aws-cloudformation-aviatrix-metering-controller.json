{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Aviatrix Systems - Creates the necessary IAM policies, roles, security group and launches Aviatrix Controller EC2 instance.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPCParam",
                        "SubnetParam"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "KeyNameParam",
                        "InstanceTypeParam"
                    ]
                },
                {
                    "Label": {
                        "default": "IAM role creation"
                    },
                    "Parameters": [
                        "IAMRoleParam"
                    ]
                }
            ],
            "ParameterLabels": {
                "VPCParam": {
                    "default": "Which VPC should the Aviatrix Controller be deployed in?"
                },
                "SubnetParam": {
                    "default": "Which public subnet in the VPC?"
                },
                "KeyNameParam": {
                    "default": "Which keypair will be used?"
                },
                "IAMRoleParam": {
                    "default": "Select New if Aviatrix IAM role has not been created (first time launch). Select aviatrix-role-ec2 if there is already Aviatrix IAM role created"
                },
                "InstanceTypeParam": {
                    "default": "Select Controller Size"
                }
            }
        }
    },

    "Parameters": {
        "VPCParam": {
            "Type": "AWS::EC2::VPC::Id",
            "Description": "Select Your VPC"
        },
        "SubnetParam": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "Aviatrix Controller must be launched on a Public Subnet"
        },
        "KeyNameParam": {
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Description": "Select your Keypair"
        },
        "IAMRoleParam": {
            "Description": "Determine if IAM roles aviatrix-role-ec2 and aviatrix-role-app should be created.",
            "Default": "New",
            "Type": "String",
            "AllowedValues": [
                "aviatrix-role-ec2",
                "New"
            ]
        },
        "InstanceTypeParam": {
            "Type": "String",
            "Default": "t2.large",
            "AllowedValues": [
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge",

                "t3.large",
                "t3.xlarge",
                "t3.2xlarge",

                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",

                "c5.large",
                "c5.xlarge",
                "c5.2xlarge"
            ],
            "Description": "Select an instance size for the controller. Default is t2.large"
        }
    },

    "Conditions": {
        "AviatrixIAMRoleNotExist": {
            "Fn::Equals": [
                {
                    "Ref": "IAMRoleParam"
                },
                "New"
            ]
        },
        "T2SeriesTrue": {
            "Fn::Or": [
                {"Fn::Equals" : [{"Ref" : "InstanceTypeParam"}, "t2.large"]},
                {"Fn::Equals" : [{"Ref" : "InstanceTypeParam"}, "t2.xlarge"]},
                {"Fn::Equals" : [{"Ref" : "InstanceTypeParam"}, "t2.2xlarge"]}
            ]
        }
    },

    "Mappings": {
        "RegionMap": {
            "us-east-1":      { "Name": "ami-df74f6a0", "Alias": "Virginia" },
            "us-east-2":      { "Name": "ami-a72c11c2", "Alias": "Ohio" },
            "us-west-1":      { "Name": "ami-e3170983", "Alias": "California" },
            "us-west-2":      { "Name": "ami-1f770667", "Alias": "Oregon" },

            "ca-central-1":   { "Name": "ami-8d8707e9", "Alias": "Canada-Central" },

            "eu-central-1":   { "Name": "ami-d9bf9d32", "Alias": "Frankfurt" },
            "eu-west-1":      { "Name": "ami-f227138b", "Alias": "Ireland" },
            "eu-west-2":      { "Name": "ami-a06587c7", "Alias": "London" },
            "eu-west-3":      { "Name": "ami-339e2f4e", "Alias": "Paris" },
            "eu-north-1":     { "Name": "ami-xxxxxxxx", "Alias": "Stockholm" },

            "ap-southeast-1": { "Name": "ami-8fcbfef3", "Alias": "Singapore" },
            "ap-southeast-2": { "Name": "ami-e90ed98b", "Alias": "Sydney" },
            "ap-northeast-1": { "Name": "ami-358f674a", "Alias": "Tokyo" },
            "ap-northeast-2": { "Name": "ami-cc08a1a2", "Alias": "Seoul" },
            "ap-east-1":      { "Name": "ami-xxxxxxxx",          "Alias": "Hong Kong" },
            "ap-south-1":     { "Name": "ami-ccc4e7a3", "Alias": "Mumbai" },

            "sa-east-1":      { "Name": "ami-1a90cd76", "Alias": "South America-Sao Paulo" },
            "us-gov-west-1":  { "Name": "ami-xxxxxxxx",          "Alias": "AWS Gov West 1" }
        }
    },

    "Resources": {
        "AviatrixRoleEC2": {
            "Type": "AWS::IAM::Role",
            "DeletionPolicy" : "Retain",
            "Condition": "AviatrixIAMRoleNotExist",
            "Properties": {
                "RoleName": "aviatrix-role-ec2",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/"
            }
        },

        "AviatrixRoleApp": {
            "Type": "AWS::IAM::Role",
            "DeletionPolicy" : "Retain",
            "Condition": "AviatrixIAMRoleNotExist",
            "Properties": {
                "RoleName": "aviatrix-role-app",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": [
                                    {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:iam::",
                                                {
                                                    "Ref": "AWS::AccountId"
                                                },
                                                ":root"
                                            ]
                                        ]
                                    }
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/"
            }
        },

        "CreateAviatrixAssumeRolePolicy": {
            "Type": "AWS::IAM::ManagedPolicy",
            "DeletionPolicy" : "Retain",
            "Condition": "AviatrixIAMRoleNotExist",
            "Properties": {
                "ManagedPolicyName": "aviatrix-assume-role-policy",
                "Description": "Policy for creating aviatrix-assume-role-policy",
                "Path": "/",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Resource": "arn:aws:iam::*:role/aviatrix-*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "aws-marketplace:MeterUsage",
                                "s3:GetBucketLocation"
                            ],
                            "Resource": "*"
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "AviatrixRoleEC2"
                    }
                ]
            }
        },

        "CreateAviatrixAppPolicy": {
            "Type": "AWS::IAM::ManagedPolicy",
            "DeletionPolicy" : "Retain",
            "Condition": "AviatrixIAMRoleNotExist",
            "Properties": {
                "ManagedPolicyName": "aviatrix-app-policy",
                "Description": "Policy for creating aviatrix-app-policy",
                "Path": "/",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "ec2:Describe*",
                                "ec2:Get*",
                                "ec2:Search*",
                                "elasticloadbalancing:Describe*",
                                "route53:List*",
                                "route53:Get*",
                                "sqs:Get*",
                                "sqs:List*",
                                "sns:List*",
                                "s3:List*",
                                "s3:Get*",
                                "iam:List*",
                                "iam:Get*",
                                "directconnect:Describe*",
                                "guardduty:Get*",
                                "guardduty:List*",
                                "ram:Get*",
                                "ram:List*"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "ec2:CreateVpc",
                                "ec2:DeleteVpc",
                                "ec2:ModifyVpcAttribute",
                                "ec2:CreateNetworkAclEntry",
                                "ec2:ReplaceNetworkAclEntry",
                                "ec2:DeleteNetworkAclEntry",
                                "ec2:CreateSubnet",
                                "ec2:DeleteSubnet",
                                "ec2:ModifySubnetAttribute",
                                "ec2:*InternetGateway*",
                                "ec2:*Route*",
                                "ec2:*Instance*",
                                "ec2:*SecurityGroup*",
                                "ec2:*Address*",
                                "ec2:*NetworkInterface*",
                                "ec2:CreateKeyPair",
                                "ec2:DeleteKeyPair",
                                "ec2:CreateTags",
                                "ec2:DeleteTags"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "ec2:CreateCustomerGateway",
                                "ec2:DeleteCustomerGateway",
                                "ec2:CreateVpnConnection",
                                "ec2:DeleteVpnConnection",
                                "ec2:CreateVpcPeeringConnection",
                                "ec2:AcceptVpcPeeringConnection",
                                "ec2:DeleteVpcPeeringConnection",
                                "ec2:EnableVgwRoutePropagation",
                                "ec2:DisableVgwRoutePropagation"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "ec2:AssociateTransitGatewayRouteTable",
                                "ec2:AcceptTransitGatewayVpcAttachment",
                                "ec2:CreateTransitGateway",
                                "ec2:CreateTransitGatewayRoute",
                                "ec2:CreateTransitGatewayRouteTable",
                                "ec2:CreateTransitGatewayVpcAttachment",
                                "ec2:DeleteTransitGateway",
                                "ec2:DeleteTransitGatewayRoute",
                                "ec2:DeleteTransitGatewayRouteTable",
                                "ec2:DeleteTransitGatewayVpcAttachment",
                                "ec2:DisableTransitGatewayRouteTablePropagation",
                                "ec2:DisassociateTransitGatewayRouteTable",
                                "ec2:EnableTransitGatewayRouteTablePropagation",
                                "ec2:ExportTransitGatewayRoutes",
                                "ec2:ModifyTransitGatewayVpcAttachment",
                                "ec2:RejectTransitGatewayVpcAttachment",
                                "ec2:ReplaceTransitGatewayRoute",
                                "ec2:EnableRoutePropagation"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "ram:CreateResourceShare",
                                "ram:DeleteResourceShare",
                                "ram:UpdateResourceShare",
                                "ram:AssociateResourceShare",
                                "ram:DisassociateResourceShare",
                                "ram:TagResource",
                                "ram:UntagResource",
                                "ram:AcceptResourceShareInvitation",
                                "ram:EnableSharingWithAwsOrganization"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "directconnect:CreateDirectConnectGateway",
                                "directconnect:CreateDirectConnectGatewayAssociation",
                                "directconnect:CreateDirectConnectGatewayAssociationProposal",
                                "directconnect:DeleteDirectConnectGateway",
                                "directconnect:DeleteDirectConnectGatewayAssociation",
                                "directconnect:DeleteDirectConnectGatewayAssociationProposal",
                                "directconnect:AcceptDirectConnectGatewayAssociationProposal"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "sqs:AddPermission",
                                "sqs:ChangeMessageVisibility",
                                "sqs:CreateQueue",
                                "sqs:DeleteMessage",
                                "sqs:DeleteQueue",
                                "sqs:PurgeQueue",
                                "sqs:ReceiveMessage",
                                "sqs:RemovePermission",
                                "sqs:SendMessage",
                                "sqs:SetQueueAttributes",
                                "sqs:TagQueue"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:CreateBucket",
                                "s3:DeleteBucket",
                                "s3:ListBucket",
                                "s3:PutObject",
                                "s3:DeleteObject"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "iam:PassRole",
                                "iam:AddRoleToInstanceProfile",
                                "iam:CreateInstanceProfile",
                                "iam:DeleteInstanceProfile",
                                "iam:RemoveRoleFromInstanceProfile",
                                "iam:CreateServiceLinkedRole"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "iam:DeletePolicyVersion",
                                "iam:CreatePolicyVersion"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "elasticloadbalancing:*",
                                "route53:ChangeResourceRecordSets",
                                "ec2:*Volume*",
                                "ec2:*Snapshot*",
                                "guardduty:*",
                                "globalaccelerator:*"
                            ],
                            "Resource": "*"
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "AviatrixRoleApp"
                    }
                ]
            }
        },

        "AviatrixInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "DeletionPolicy" : "Retain",
            "Condition": "AviatrixIAMRoleNotExist",
            "Properties": {
                "Path": "/",
                "InstanceProfileName": "aviatrix-role-ec2",
                "Roles": [
                    {
                        "Ref": "AviatrixRoleEC2"
                    }
                ]
            }
        },

        "AviatrixController": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "Name"
                    ]
                },
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "20",
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "DisableApiTermination": "true",
                "KeyName": {
                    "Ref": "KeyNameParam"
                },
                "InstanceType": {
                    "Ref": "InstanceTypeParam"
                },
                "IamInstanceProfile": "aviatrix-role-ec2",
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "GroupSet": [
                            {
                                "Ref": "AviatrixSG"
                            }
                        ],
                        "SubnetId": {
                            "Ref": "SubnetParam"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "AviatrixController"
                    },
                    {
                        "Key": "Project",
                        "Value": "Aviatrix"
                    }
                ]
            }
        },

        "AviatrixEIP": {
            "Type": "AWS::EC2::EIP",
            "DeletionPolicy" : "Retain",
            "Properties": {
                "InstanceId": {
                    "Ref": "AviatrixController"
                },
                "Domain": "vpc"
            }
        },

        "AviatrixSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Aviatrix - Allow HTTPS to Controller",
                "VpcId": {
                    "Ref": "VPCParam"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "443",
                        "ToPort": "443"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "AviatrixSecurityGroup"
                    },
                    {
                        "Key": "Project",
                        "Value": "Aviatrix"
                    }
                ]
            }
        }
    },

    "Outputs": {
        "AccountId": {
            "Description": "Amazon Account ID",
            "Value": {
                "Ref": "AWS::AccountId"
            }
        },
        "AviatrixRoleAppARN": {
            "Description": "AviatrixRoleApp ARN",
            "Condition": "AviatrixIAMRoleNotExist",
            "Value": {
                "Fn::GetAtt": [
                    "AviatrixRoleApp",
                    "Arn"
                ]
            }
        },
        "AviatrixRoleEC2ARN": {
            "Description": "AviatrixRoleEC2 ARN",
            "Condition": "AviatrixIAMRoleNotExist",
            "Value": {
                "Fn::GetAtt": [
                    "AviatrixRoleEC2",
                    "Arn"
                ]
            }
        },
        "AviatrixControllerEIP": {
            "Description": "AviatrixController External IP",
            "Value": {
                "Fn::GetAtt": [
                    "AviatrixController",
                    "PublicIp"
                ]
            }
        },
        "AviatrixControllerPrivateIP": {
            "Description": "AviatrixController Private IP",
            "Value": {
                "Fn::GetAtt": [
                    "AviatrixController",
                    "PrivateIp"
                ]
            }
        }
    }
}
